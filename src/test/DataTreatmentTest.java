package test;

import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import shs.DataTreatment;

public class DataTreatmentTest {

	private DataTreatment d = new DataTreatment();
	
	@Test
	void testTextToBinary() {
		assertEquals("00000000", d.textToBinary(""));
		assertEquals(
				
				d.textToBinary(
						" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~"));
	}

	@Test
	void testBinaryToHexadecimal() {
		assertEquals("00", d.binaryToHexadecimal("000000"));
		assertEquals("52", d.binaryToHexadecimal("1010010"));
		assertEquals("094acaaf", d.binaryToHexadecimal("01001010010101100101010101111"));
	}

	@Test
	void testHexadecimalToBinary() {
		assertEquals("00000000", d.hexadecimalToBinary("00"));
		assertEquals("01010010", d.hexadecimalToBinary("52"));
		assertEquals("00001001010010101100101010101111", d.hexadecimalToBinary("094acaaf"));
	}

}
